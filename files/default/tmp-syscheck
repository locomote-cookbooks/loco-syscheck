#!/usr/bin/env syscheck

check_system

failed_email_blacklist="@ssdf.com|siege@locomote.com.au|authoriserdave@locomote.com.au|molly14@locomote.com.au|test@locomote.com.au|david-austravel@locomote.com.au"

check_failed_emails() {
  MAIL_LOGFILE=${MAIL_LOGFILE:-/var/log/maillog}
  local emails_sent=$(sudo grep status=sent $MAIL_LOGFILE | sed 's/.* to=<//g' | sed 's/>,.*//g' | sort -u)
  local emails_failed=$(
    sudo grep status= $MAIL_LOGFILE |
    grep -v sent | sed 's/.* to=<//g' | sed 's/>,.*//g' |
    grep -v root | grep -v localhost | grep -v locomotetmp |
    grep -v -E $failed_email_blacklist
  )

  local number_of_sent_emails=$(  [  "$emails_sent"   ] && (echo "$emails_sent" | wc -l | tr -d ' ') || echo 0)
  local number_of_failed_emails=$([  "$emails_failed" ] && (echo "$emails_failed" | wc -l | tr -d ' ') || echo 0)

  run echo "$number_of_sent_emails email(s) sent to : $(    echo "$emails_sent"     | sort -u | xargs)"
  run echo "$number_of_failed_emails email(s) failed to send to : $(echo "$emails_failed" | sort -u | xargs)"

  assert equal $number_of_failed_emails 0
}

not_on_systest() {
  [ $(hostname) != "tmp-systest" ]
}

process_pids() { local process=$1
  pgrep -f $process
}

check_ruby_processes_are_using_correct_ruby_version() { local process=$1; local ruby_version=$2
  it "${process} processes should all use $ruby_version"
    all=true
    for p in $(process_pids $process); do
      exe_ruby_version=$(ls -l /proc/$p/exe)
      run echo $exe_ruby_version
      all=$([[ $exe_ruby_version =~ $ruby_version ]] && $all && echo true || echo false)
    done
    assert test $all
}


#########

check_god() {
  describe 'god'
    its_process_count 'god' 1
  end_describe
}

check_unicorn() {
  describe 'unicorn'
    its_process_count 'unicorn_rails master' ${UNICORN_MASTER_PROCESS_COUNT:=2}
    its_process_count 'unicorn_rails worker' ${UNICORN_WORKER_PROCESS_COUNT:=8}
    check_ruby_processes_are_using_correct_ruby_version unicorn ${RUBY_VERSION:-ruby-2.0.0-p195}
  end_describe
}

check_nginx() {
  describe 'nginx'
    its_process_count 'nginx: master process' ${NGINX_MASTER_PROCESS_COUNT:=1}
    its_process_count 'nginx: worker process' ${NGINX_WORKER_PROCESS_COUNT:=$(cmd_for number_of_cores)}
  end_describe
}

check_redis() {
  describe 'redis'
    its_process_count 'redis-server' ${REDIS_PROCESS_COUNT:=1}
  end_describe
}

check_resque() {
  describe 'resque'
    its_process_count 'resque' ${RESQUE_PROCESS_COUNT:=2}
  end_describe
}

check_postfix() {
  describe 'postfix'
    its_process_count 'postfix/master' ${POSTFIX_PROCESS_COUNT:=1}

    if not_on_systest; then
      it "should have the correct hostname in the (chef generated) postfix config file"
        myhostname=`grep ^myhostname /etc/postfix/main.cf | sed 's/^myhostname = //'`
        fqdn=`hostname --fqdn`
        run echo "=> myhostname: $myhostname (fqdn: $fqdn)"
        assert equal $myhostname $fqdn

      it 'should not have any failed emails'
        check_failed_emails
    fi

  end_describe
}


DEFAULT_TMP_CHECKS="god unicorn nginx redis resque postfix"
check_tmp() {
  for c in $@; do
    func="check_${c}"
    type $func 2> /dev/null | grep -q 'function' && $func
  done
}

check_tmp ${TMP_CHECKS:-$DEFAULT_TMP_CHECKS}
