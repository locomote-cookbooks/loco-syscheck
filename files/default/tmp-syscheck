#!/usr/bin/env syscheck

check_system

not_on_systest() {
  [ $(hostname) != "tmp-systest" ]
}

my_process_pids() { local process=$1
  pgrep -u $USER $process
}


#########

check_god() {
  describe 'god'
    its_process_count 'god' 1
  end
}

check_unicorn() {
  describe 'unicorn'
    its_process_count 'unicorn_rails master' ${UNICORN_MASTER_PROCESS_COUNT:=1}
    its_process_count 'unicorn_rails worker' ${UNICORN_WORKER_PROCESS_COUNT:=4}
  end
}

check_ruby_version() {
  describe 'ruby_version'
    local ruby_version=${RUBY_VERSION:-ruby-2.0.0-p353}
    it "all ruby processes should use $ruby_version"
      all=true
      for p in $(my_process_pids ruby); do
        exe_ruby_version=$(ls -l /proc/$p/exe)
        run echo $exe_ruby_version
        all=$([[ $exe_ruby_version =~ $ruby_version ]] && $all && echo true || echo false)
      done
      assert test $all
    end
  end
}

check_nginx() {
  describe 'nginx'
    its_process_count 'nginx: master process' ${NGINX_MASTER_PROCESS_COUNT:=1}
    its_process_count 'nginx: worker process' ${NGINX_WORKER_PROCESS_COUNT:=$(cmd_for number_of_cores)}
  end
}

check_redis() {
  describe 'redis'
    its_process_count 'redis-server' ${REDIS_PROCESS_COUNT:=1}
  end
}

check_resque() {
  describe 'resque'
    its_process_count 'resque-[0-9.]*: \(Waiting\|Forked\)' ${RESQUE_PROCESS_COUNT:=2}
  end
}

check_newrelic() {
  describe 'newrelic'
    its_process_count 'nrsysmond' ${NRSYSMOND_PROCESS_COUNT:=2}

    it "last log entry shouldn't be an error"
      assert blank "$(tail -n 1 /var/log/newrelic/nrsysmond.log | grep error)"
    end
  end
}

DEFAULT_TMP_CHECKS="god unicorn ruby_version nginx resque newrelic"
[ $RAILS_ENV == "systest" ] && DEFAULT_TMP_CHECKS="$DEFAULT_TMP_CHECKS redis"
check_tmp() {
  for c in $@; do
    func="check_${c}"
    type $func 2> /dev/null | grep -q 'function' && $func
  done
}

check_tmp ${TMP_CHECKS:-$DEFAULT_TMP_CHECKS}
